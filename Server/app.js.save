
/**
 * Module dependencies.
 */
 // Grant's code
// Here sits the code to return data when a call is made to the endpoint
var express = require('express')
  , routes = require('./routes');

  var mysql = require("mysql");

var app = module.exports = express.createServer();

var testArray = ["Hello Friend"];

// Configuration

app.configure(function(){
  app.set('views', __dirname + '/views');
  app.set('view engine', 'jade');
  app.use(express.bodyParser());
  app.use(express.methodOverride());
  app.use(app.router);
  app.use(express.static(__dirname + '/public'));
});

app.configure('development', function(){
  app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));
});

app.configure('production', function(){
  app.use(express.errorHandler());
});

// Routes

app.get('/', function (req, res) {
  // This line here is responsible for calling the next block of code
  res.json(theQuery);
});

app.listen(80, function(){
  console.log("Express server listening on port %d in %s mode", app.address().port, app.settings.env);
});


// Austin's code
var theQuery = function queryDB() {
  var json;
var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "root",
  database: "ad430_db"
});

con.connect(function(err){
  if(err){
    console.log('Error connecting to Db');
    return;
  }
  console.log('Connection established');
});

var getJson = con.query('SELECT * FROM user', function(err,rows){
  if(err) throw err;

  // Tim's code
  var objs = {
      people: []
  };
  for (var i = 0; i < rows.length; i++) {
      objs.people.push({ id: rows[i].user_id });
  }
  var result = JSON.stringify(objs);
  console.log(result);
  // parse the JSON back into readable data
  json = JSON.parse(result);
  console.log(json.people[0].name);
  //console.log('Data received from Db:\n');
  //console.log(rows);
});

con.end(function(err) {
  // The connection is terminated gracefully
  // Ensures all previously enqueued queries are still
  // before sending a COM_QUIT packet to the MySQL server.
});
return getJson;
}
